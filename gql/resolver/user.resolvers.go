package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.78

import (
	"context"
	"fmt"

	gqlmodel "github.com/shiqi/datai/gql/model"
	"github.com/shiqi/datai/internal/middleware"
)

// UpsertUser is the resolver for the upsertUser field.
func (r *mutationResolver) UpsertUser(ctx context.Context, input gqlmodel.UpsertUserInput) (*gqlmodel.User, error) {
	userID, err := middleware.GetUserIDFromContext(ctx)
	if err != nil {
		return nil, fmt.Errorf("unauthorized: %w", err)
	}

	// 现在你拿到 userID（也就是 Authing userId 或 sub），接下来交给 service 层处理业务逻辑
	// 比如 r.UserService.UpsertUser(userID, input)

	return &gqlmodel.User{UID: userID}, nil
}

// Me is the resolver for the me field.
func (r *queryResolver) Me(ctx context.Context) (*gqlmodel.User, error) {
	panic(fmt.Errorf("not implemented: Me - me"))
}
